{"version":3,"sources":["render/widgetsRegister.js","render/renderFn.js","render/Render.jsx","widgets/columns.jsx","widgets/tpl.jsx","widgets/input.jsx","widgets/index.js","widgets/page.jsx","utils.js","RenderPage.jsx","editor/store.js","editor/sections/components/DragDropZone.jsx","editor/sections/CanvasPanel.jsx","editor/sections/ConfigPanel.jsx","editor/sections/SelectPanel.jsx","editor/Editor.jsx","EditorPage.jsx","index.jsx"],"names":["widgetsRegisteredMap","Map","registerWidget","Comp","type","has","Error","set","useRenderFn","enhance","renderFn","useCallback","schema","Array","isArray","batchRender","renderSchema","map","get","React","createElement","key","id","render","Render","globalThis","_debug","compRegisteredMap","Columns","columns","className","index","Tpl","tpl","Input","label","body","notyf","Notyf","position","x","y","jsonParser","val","defaultVal","JSON","parse","value","e","stringify","lcStore","AzzStorage","RenderPage","jsoneditor","useRef","useState","setSchema","useEffect","current","JsonEditor","document","getElementById","mode","modes","onClick","EditorStore","Set","this","listener","listeners","add","delete","values","call","searchSchemaById","EditorStoreContext","createContext","Object","keys","prop","result","insertNodeAt","fatherNode","node","refNode","children","nextSibling","insertBefore","DragDropItem","eventBus","useContext","forceUpdate","onWidgetSchemaChange","newSchema","assign","event","stopPropagation","setActiveWidgetId","DragDropZone","dragDropRef","sortable","Sortable","group","name","pull","put","sort","onAdd","item","remove","splice","newIndex","_dragData","onUpdate","from","oldIndex","onRemove","onStart","prototype","slice","childNodes","indexOf","_dragSchema","onMove","destroy","ref","_schema","CanvasPanel","ConfigPanel","compositionList","getActiveWidget","activeWidget","setActiveWidget","onAcitiveWidgetIdChange","defaultValue","onChange","updateActiveWidgetSchema","target","SelectPanel","dragZone","onClone","compositionData","cloneDeep","nanoid","composition","Editor","props","useMemo","useImperativeHandle","getSchema","Provider","forwardRef","EditorPage","editorRef","success","Navigo","hash","hooks","after","match","navBtns","querySelectorAll","btn","classList","getAttribute","url","on","ReactDOM","StrictMode","leave","done","resolve"],"mappings":"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","file":"static/js/main.a62d1fa0.chunk.js","sourcesContent":["const widgetsRegisteredMap = new Map();\n\n/* eslint-disable */\nglobalThis._debug = {\n  compRegisteredMap: widgetsRegisteredMap\n}\n\nexport function registerWidget({type}, Comp) {\n\n  if (widgetsRegisteredMap.has(type)) {\n    throw new Error(`type ${type} already registered.`);\n  }\n\n  widgetsRegisteredMap.set(type, Comp);\n\n  return Comp;\n}\n\nexport function resolveWidget(type) {\n  return widgetsRegisteredMap.get(type);\n}\n\nexport function resetWidgetsMap() {\n  widgetsRegisteredMap.clear();\n}\n","import React, {useCallback} from \"react\";\nimport { resolveWidget } from \"./widgetsRegister\";\n\nexport function useRenderFn(enhance) {\n\n  const renderFn = useCallback((schema) => {\n    if (Array.isArray(schema)) {\n      if (enhance?.batchRender) {\n        return enhance.batchRender(renderSchema, schema)\n      }\n      return schema.map(renderSchema);\n    }\n\n    function renderSchema(schema) {\n      const Comp = schema && resolveWidget(schema.type);\n\n      if (!Comp) {\n        return React.createElement(\"div\", null, \"[Type] \" + schema?.type + \" 未注册\");\n      }\n\n      return React.createElement(Comp, {\n        key: schema.id,\n        ...schema,\n        render: renderFn,\n      });\n    }\n\n    return renderSchema(schema);\n  }, [enhance])\n\n  return renderFn;\n}\n","import { useRenderFn } from \"./renderFn\";\n\nexport function Render({ schema, enhance }) {\n  const renderFn = useRenderFn(enhance);\n  return schema ? renderFn(schema) : null;\n}\n","import React from \"react\";\n\n\nfunction Columns({ columns, render, id }) {\n  return (\n    <div className=\"flex-row\">\n      {columns.map((schema, index) => (\n        <div className=\"flex-auto\" key={id + \"_\" + index}>\n          {render(schema)}\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default Columns;\n","import React from \"react\";\n\nfunction Tpl({ tpl }) {\n  return <div>{tpl}</div>;\n}\n\nexport default Tpl;\n","import React from \"react\";\n\nfunction Input({ label }) {\n  return (\n    <div>\n      <label>{label}</label>\n      <input className=\"u-full-width\" />\n    </div>\n  );\n}\n\nexport default Input;\n","import { registerWidget } from \"../render\";\nimport Columns from \"./columns\";\nimport Page from \"./page\";\nimport Tpl from \"./tpl\";\nimport Input from \"./input\";\n\nregisterWidget({ type: \"page\" }, Page);\nregisterWidget({ type: \"columns\" }, Columns);\nregisterWidget({ type: \"tpl\" }, Tpl);\nregisterWidget({ type: \"input\" }, Input);\n","import React from \"react\"\n\nfunction Page({body, render}){\n  return(\n    <div className=\"page\">\n      {render(body)}\n    </div>\n    )\n}\n\nexport default Page\n","import AzzStorage from \"azz-storage\";\nimport { Notyf } from 'notyf';\nimport 'notyf/notyf.min.css'; // for React, Vue and Svelte\n\n// Create an instance of Notyf\nexport const notyf = new Notyf({position: {x: 'right', y: 'top'}});\n\nconst jsonParser: IAzzStorageParser = {\n  get(val, defaultVal) {\n    try {\n      const data = JSON.parse(val);\n      return data.value;\n    } catch (e) {\n      return defaultVal;\n    }\n  },\n  set(val) {\n    return JSON.stringify({\n      value: val,\n    });\n  },\n};\n\nexport const lcStore = new AzzStorage(\"lc-\", jsonParser);\n","import JsonEditor from \"jsoneditor\";\nimport React, { useEffect, useState } from \"react\";\nimport { Render } from \"./render\";\nimport { useRef } from \"react\";\nimport \"./widgets\";\nimport { lcStore } from \"./utils\";\n\nfunction RenderPage() {\n  const jsoneditor = useRef(null);\n  const [schema, setSchema] = useState(lcStore.get(\"schema\", { type: \"page\" }));\n\n  useEffect(() => {\n    if (!jsoneditor.current) {\n      jsoneditor.current = new JsonEditor(\n        document.getElementById(\"jsoneditor\"),\n        { mode: \"code\", modes: [\"code\", \"tree\", \"view\"] }\n      );\n      jsoneditor.current.set(schema);\n    }\n    /* eslint-disable-next-line */\n  }, []);\n\n  const onSave = () => {\n    const schema = jsoneditor.current.get();\n    if (schema) {\n      setSchema(jsoneditor.current.get());\n      lcStore.set(\"schema\", schema);\n    }\n  };\n\n  const onReset = () => {\n    setSchema({ type: \"page\" });\n    jsoneditor.current.set({ type: \"page\" });\n  };\n\n  return (\n    <div className=\"App row full-height\">\n      <div>\n        <Render schema={schema} />\n      </div>\n      <hr />\n      <h4>Schema 编辑器</h4>\n      <div>\n        <div className=\"row\">\n          <button className=\"button button-primary\" onClick={onSave}>\n            save\n          </button>\n          <button className=\"button\" onClick={onReset}>\n            reset\n          </button>\n        </div>\n        <div id=\"jsoneditor\" />\n      </div>\n    </div>\n  );\n}\n\nexport default RenderPage;\n","import {createContext} from \"react\";\n\nexport class EditorStore {\n  #schema = null;\n  #activeWidgetIdListeners = new Set();\n  #widgetSchemaListenersMap = new Map();\n  #activeWidgetId = null;\n\n  constructor(schema) {\n    this.#schema = schema;\n  }\n\n  onWidgetSchemaChange(id, listener) {\n    let listeners = this.#widgetSchemaListenersMap.get(id);\n    if (!listeners) {\n      listeners = new Set();\n      this.#widgetSchemaListenersMap.set(id, listeners);\n    }\n\n    if (!listeners.has(listener)) {\n      listeners.add(listener);\n    }\n\n    return () => listeners.delete(listener);\n  }\n\n  updateActiveWidgetSchema(schema) {\n    if (!this.#widgetSchemaListenersMap.has(schema.id)) {\n      return;\n    }\n    for ( let listener of this.#widgetSchemaListenersMap.get(schema.id).values()) {\n      listener.call(null, schema);\n    }\n  }\n\n  setActiveWidgetId(id) {\n    this.#activeWidgetId = id;\n    for (let listener of this.#activeWidgetIdListeners.values()) {\n      listener.call(null, this.#activeWidgetId);\n    }\n  }\n\n  onAcitiveWidgetIdChange(listener) {\n    if (!this.#activeWidgetIdListeners.has(listener)) {\n      this.#activeWidgetIdListeners.add(listener)\n    }\n\n    return () => this.#activeWidgetIdListeners.delete(listener);\n  }\n\n\n  getActiveWidget() {\n    return searchSchemaById(this.#schema, this.#activeWidgetId);\n  }\n\n  getSchema() {\n    return this.#schema;\n  }\n\n}\n\nexport const EditorStoreContext = createContext(new EditorStore());\n\nexport function searchSchemaById(schema, id) {\n  if (schema?.id === id) {\n    return schema;\n  }\n\n  for (let prop of Object.keys(schema)) {\n    if (typeof schema[prop] === 'object') {\n      const result = searchSchemaById(schema[prop], id);\n      if (result) return result;\n    }\n  }\n\n  return null;\n}\n","import React, { useContext, useEffect, useRef, useState } from \"react\";\nimport Sortable from \"sortablejs\";\nimport { EditorStoreContext } from \"../../store\";\n\n// copy from vuedraggable source code\nfunction insertNodeAt(fatherNode, node, position) {\n  const refNode =\n    position === 0\n      ? fatherNode.children[0]\n      : fatherNode.children[position - 1].nextSibling;\n  fatherNode.insertBefore(node, refNode);\n}\n\nfunction DragDropZone({ render, schema }) {\n  const dragDropRef = useRef(null);\n  const [, forceUpdate] = useState({});\n  const eventBus = useContext(EditorStoreContext);\n\n  useEffect(() => {\n    const sortable = new Sortable(dragDropRef.current, {\n      group: { name: \"low-code\", pull: true, put: true },\n      sort: true,\n      onAdd(event) {\n        event.item.remove();\n        schema.splice(event.newIndex, 0, event.item._dragData);\n        eventBus.setActiveWidgetId(event.item._dragData.id);\n        forceUpdate({});\n      },\n      onUpdate(event) {\n        event.item.remove();\n        insertNodeAt(event.from, event.item, event.oldIndex);\n        schema.splice(event.newIndex, 0, schema.splice(event.oldIndex, 1)[0]);\n        forceUpdate({});\n      },\n      onRemove(event) {\n        // must keep a dom on origin position then change data。\n        insertNodeAt(dragDropRef.current, event.item, event.oldIndex);\n        schema.splice(event.oldIndex, 1);\n        forceUpdate({});\n      },\n      onStart(event) {\n        const index = Array.prototype.slice\n          .call(dragDropRef.current.childNodes)\n          .indexOf(event.item);\n        const _dragSchema = schema[index];\n        event.item._dragData = _dragSchema;\n      },\n      onMove(event) {},\n    });\n    return () => sortable.destroy();\n  }, [schema, eventBus]);\n\n  return (\n    <div className=\"drag-drop-zone\" ref={dragDropRef}>\n      {schema.map((_schema) => {\n        return (\n          <DragDropItem key={_schema.id} schema={_schema} render={render} />\n        );\n      })}\n    </div>\n  );\n}\n\nfunction DragDropItem({ schema, render }) {\n  const eventBus = useContext(EditorStoreContext);\n  const [, forceUpdate] = useState({});\n\n  useEffect(() => {\n    return eventBus.onWidgetSchemaChange(schema.id, (newSchema) => {\n      Object.assign(schema, newSchema);\n      forceUpdate({});\n    });\n  }, [eventBus, schema]);\n\n  return (\n    <div\n      className=\"drag-drop-item\"\n      key={schema.id}\n      onClick={(event) => {\n        event.stopPropagation();\n        eventBus.setActiveWidgetId(schema.id);\n      }}\n    >\n      {render(schema)}\n    </div>\n  );\n}\n\nexport default DragDropZone;\n","import React from \"react\";\nimport {Render} from \"../../render\";\nimport DragDropZone from \"./components/DragDropZone\";\n\nfunction CanvasPanel({schema}) {\n\n  function batchRender(renderSchema, schema) {\n    return <DragDropZone schema={schema} render={renderSchema}></DragDropZone>;\n  }\n\n  return (\n    <div className=\"canvas-panel eight columns\">\n      <Render schema={schema} enhance={{ batchRender }} />\n    </div>\n  );\n}\n\nexport default CanvasPanel;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { EditorStoreContext } from \"../store\";\n\nfunction ConfigPanel({ compositionList = [] }) {\n  const eventBus = useContext(EditorStoreContext);\n  const [activeWidget, setActiveWidget] = useState(eventBus.getActiveWidget());\n\n  useEffect(() => {\n    return eventBus.onAcitiveWidgetIdChange(() => {\n      setActiveWidget(eventBus.getActiveWidget());\n    });\n  }, [eventBus]);\n  return (\n    <div key={activeWidget?.id} className=\"two columns\">\n      {activeWidget?.label && (\n        <>\n          <label>label</label>\n          <input\n            defaultValue={activeWidget.label}\n            onChange={(event) =>\n              eventBus.updateActiveWidgetSchema({\n                ...activeWidget,\n                label: event.target.value,\n              })\n            }\n          />\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default ConfigPanel;\n","import { cloneDeep } from \"lodash-es\";\nimport { nanoid } from \"nanoid\";\nimport React, { useEffect, useRef } from \"react\";\nimport Sortable from \"sortablejs\";\n\nfunction SelectPanel({ compositionList = [] }) {\n  const dragZone = useRef(null);\n\n  useEffect(() => {\n    const sortable = new Sortable(dragZone.current, {\n      group: { name: \"low-code\", pull: \"clone\", put: false },\n      sort: false,\n      onClone(event) {\n        const index = Array.prototype.slice\n          .call(dragZone.current.childNodes)\n          .indexOf(event.item);\n        const compositionData = compositionList[index];\n\n        event.item._dragData = cloneDeep({\n          ...compositionData.schema,\n          key: compositionData.key,\n          id: nanoid(10),\n        });\n      },\n    });\n\n    return () => sortable.destroy();\n  }, [compositionList]);\n\n  return (\n    <div ref={dragZone} className=\"two columns select-panel\">\n      {compositionList.map((composition) => (\n        <p className=\"drag-item\" key={composition.name}>\n          {composition.name}\n        </p>\n      ))}\n    </div>\n  );\n}\n\nexport default SelectPanel;\n","import React, { forwardRef, useImperativeHandle, useMemo } from \"react\";\nimport CanvasPanel from \"./sections/CanvasPanel\";\nimport ConfigPanel from \"./sections/ConfigPanel\";\nimport SelectPanel from \"./sections/SelectPanel\";\nimport \"./editor.css\";\nimport { EditorStoreContext, EditorStore } from \"./store\";\n\nfunction Editor(props, ref) {\n  const { compositionList, schema = { type: \"page\", body: [] } } = props;\n\n  const eventBus = useMemo(() => {\n    return new EditorStore(schema);\n  }, [schema]);\n\n  useImperativeHandle(ref, () => ({\n    getSchema() {\n      return eventBus.getSchema();\n    },\n  }));\n\n  return (\n    <div className=\"editor row\">\n      <EditorStoreContext.Provider value={eventBus}>\n        <SelectPanel compositionList={compositionList} />\n        <CanvasPanel schema={schema} />\n        <ConfigPanel compositionList={compositionList} />\n      </EditorStoreContext.Provider>\n    </div>\n  );\n}\n\nexport default forwardRef(Editor);\n","import React, { useRef, useState } from \"react\";\nimport Editor from \"./editor/Editor\";\nimport { lcStore, notyf } from \"./utils\";\n\nfunction EditorPage() {\n  const editorRef = useRef(null);\n\n  const compositionList = [\n    {\n      name: \"Single Line Input\",\n      key: \"text-input\",\n      schema: {\n        type: \"input\",\n        label: \"Single Line Input\",\n      },\n    },\n    {\n      name: \"Columns\",\n      key: \"columns\",\n      schema: {\n        type: \"columns\",\n        columns: [[], []],\n      },\n    },\n    {\n      name: \"Template\",\n      key: \"template\",\n      schema: {\n        type: \"tpl\",\n        tpl: \"Hello World\",\n      },\n    },\n  ];\n\n  const [schema, setSchema] = useState(lcStore.get('schema', {type: 'page', body: []}));\n\n  function onSaveSchema() {\n    const schema = editorRef.current.getSchema();\n\n    if (schema) {\n      lcStore.set('schema', schema);\n      notyf.success(\"Save Success!\")\n    }\n  }\n\n  function onClearSchema() {\n    setSchema({ type: \"page\", body: [] });\n  }\n\n  return (\n    <div className=\"full-height flex-column\">\n      <div className=\"row \">\n        <button onClick={onSaveSchema} className=\"button button-primary\">\n          Save Schema\n        </button>\n        <button onClick={onClearSchema} className=\"button\">\n          clear Schema\n        </button>\n      </div>\n      <div className=\"flex-auto\">\n        <Editor\n          ref={editorRef}\n          schema={schema}\n          compositionList={compositionList}\n        />\n        ;\n      </div>\n    </div>\n  );\n}\n\nexport default EditorPage;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"jsoneditor/dist/jsoneditor.css\";\nimport Navigo from \"navigo\";\nimport RenderPage from \"./RenderPage\";\nimport EditorPage from \"./EditorPage\";\n\nconst router = new Navigo(\"/\", { hash: true });\n\nrouter\n  .hooks({\n    after: ((match) => {\n      const navBtns = document.querySelectorAll('body > nav > a')\n      for (let btn of navBtns) {\n        btn.classList.remove('active');\n        if (btn.getAttribute('href').indexOf(match.url) > -1) {\n          btn.classList.add('active');\n        }\n      }\n    })\n  })\n  .on(\n    \"/editor\",\n    () => {\n      ReactDOM.render(\n        <React.StrictMode>\n          <EditorPage />\n        </React.StrictMode>,\n        document.getElementById(\"root\")\n      );\n    },\n    {\n      leave: (done) => {\n        ReactDOM.render(null, document.getElementById(\"root\"));\n        done();\n      },\n    }\n  )\n  .on(\n    \"/render\",\n    () => {\n      ReactDOM.render(\n        <React.StrictMode>\n          <RenderPage />\n        </React.StrictMode>,\n        document.getElementById(\"root\")\n      );\n    },\n    {\n      leave: (done) => {\n        ReactDOM.render(null, document.getElementById(\"root\"));\n        done();\n      },\n    }\n  )\n  .resolve();\n"],"sourceRoot":""}